// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-03-20 16:37:39
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// WaterSessionDao is the data access object for table water_session.
type WaterSessionDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns WaterSessionColumns // columns contains all the column names of Table for convenient usage.
}

// WaterSessionColumns defines and stores column names for table water_session.
type WaterSessionColumns struct {
	Id          string //
	CreatedAt   string //
	UpdatedAt   string //
	SessionId   string //
	SessionType string //
	SessionKey  string // 32 bytes of key + 16 bytes of iv
}

//  waterSessionColumns holds the columns for table water_session.
var waterSessionColumns = WaterSessionColumns{
	Id:          "id",
	CreatedAt:   "created_at",
	UpdatedAt:   "updated_at",
	SessionId:   "session_id",
	SessionType: "session_type",
	SessionKey:  "session_key",
}

// NewWaterSessionDao creates and returns a new DAO object for table data access.
func NewWaterSessionDao() *WaterSessionDao {
	return &WaterSessionDao{
		group:   "default",
		table:   "water_session",
		columns: waterSessionColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *WaterSessionDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *WaterSessionDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *WaterSessionDao) Columns() WaterSessionColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *WaterSessionDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *WaterSessionDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *WaterSessionDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
