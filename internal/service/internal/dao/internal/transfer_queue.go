// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-03-20 16:37:39
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TransferQueueDao is the data access object for table transfer_queue.
type TransferQueueDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns TransferQueueColumns // columns contains all the column names of Table for convenient usage.
}

// TransferQueueColumns defines and stores column names for table transfer_queue.
type TransferQueueColumns struct {
	TransferId       string //
	CreatedAt        string //
	UpdatedAt        string //
	TransactionId    string //
	TransactionOrder string //
	Origin           string //
	Target           string //
	From             string //
	To               string //
	MessageType      string //
	MessageJson      string //
}

//  transferQueueColumns holds the columns for table transfer_queue.
var transferQueueColumns = TransferQueueColumns{
	TransferId:       "transfer_id",
	CreatedAt:        "created_at",
	UpdatedAt:        "updated_at",
	TransactionId:    "transaction_id",
	TransactionOrder: "transaction_order",
	Origin:           "origin",
	Target:           "target",
	From:             "from",
	To:               "to",
	MessageType:      "message_type",
	MessageJson:      "message_json",
}

// NewTransferQueueDao creates and returns a new DAO object for table data access.
func NewTransferQueueDao() *TransferQueueDao {
	return &TransferQueueDao{
		group:   "default",
		table:   "transfer_queue",
		columns: transferQueueColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TransferQueueDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TransferQueueDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TransferQueueDao) Columns() TransferQueueColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TransferQueueDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TransferQueueDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TransferQueueDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
