// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-02-10 14:29:21
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// WaterDao is the data access object for table water.
type WaterDao struct {
	table   string       // table is the underlying table name of the DAO.
	group   string       // group is the database configuration group name of current DAO.
	columns WaterColumns // columns contains all the column names of Table for convenient usage.
}

// WaterColumns defines and stores column names for table water.
type WaterColumns struct {
	WaterId       string //
	VerifySession string //
	Key           string //
	Url           string //
	IsBanned      string //
	IsVerified    string //
	IsReviewed    string //
	CreatedAt     string //
	UpdatedAt     string //
	IsSelf        string //
}

//  waterColumns holds the columns for table water.
var waterColumns = WaterColumns{
	WaterId:       "water_id",
	VerifySession: "verify_session",
	Key:           "key",
	Url:           "url",
	IsBanned:      "is_banned",
	IsVerified:    "is_verified",
	IsReviewed:    "is_reviewed",
	CreatedAt:     "created_at",
	UpdatedAt:     "updated_at",
	IsSelf:        "is_self",
}

// NewWaterDao creates and returns a new DAO object for table data access.
func NewWaterDao() *WaterDao {
	return &WaterDao{
		group:   "default",
		table:   "water",
		columns: waterColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *WaterDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *WaterDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *WaterDao) Columns() WaterColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *WaterDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *WaterDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *WaterDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
